/*
Copyright The KubeDB Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package kubedb.dev.apimachinery.apis.dba.v1alpha1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=elasticsearchmodificationrequests,singular=elasticsearchmodificationrequest,shortName=esmodreq,categories={datastore,kubedb,appscode}
message ElasticsearchModificationRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ElasticsearchModificationRequestSpec spec = 2;

  optional ElasticsearchModificationRequestStatus status = 3;
}

message ElasticsearchModificationRequestCondition {
  // request approval state, currently Approved or Denied.
  optional string type = 1;

  // brief reason for the request state
  // +optional
  optional string reason = 2;

  // human readable message with details about the request state
  // +optional
  optional string message = 3;

  // timestamp for the last update to this condition
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;
}

// ElasticsearchModificationRequestList is a list of ElasticsearchModificationRequests
message ElasticsearchModificationRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ElasticsearchModificationRequest CRD objects
  repeated ElasticsearchModificationRequest items = 2;
}

// ElasticsearchModificationRequestSpec is the spec for elasticsearch version
message ElasticsearchModificationRequestSpec {
}

// ElasticsearchModificationRequestStatus is the status for elasticsearch version
message ElasticsearchModificationRequestStatus {
  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated ElasticsearchModificationRequestCondition conditions = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=etcdmodificationrequests,singular=etcdmodificationrequest,shortName=etcdmodreq,categories={datastore,kubedb,appscode}
message EtcdModificationRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional EtcdModificationRequestSpec spec = 2;

  optional EtcdModificationRequestStatus status = 3;
}

message EtcdModificationRequestCondition {
  // request approval state, currently Approved or Denied.
  optional string type = 1;

  // brief reason for the request state
  // +optional
  optional string reason = 2;

  // human readable message with details about the request state
  // +optional
  optional string message = 3;

  // timestamp for the last update to this condition
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;
}

// EtcdModificationRequestList is a list of EtcdModificationRequests
message EtcdModificationRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of EtcdModificationRequest CRD objects
  repeated EtcdModificationRequest items = 2;
}

// EtcdModificationRequestSpec is the spec for elasticsearch version
message EtcdModificationRequestSpec {
}

// EtcdModificationRequestStatus is the status for elasticsearch version
message EtcdModificationRequestStatus {
  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated EtcdModificationRequestCondition conditions = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=memcachedmodificationrequests,singular=memcachedmodificationrequest,shortName=mcmodreq,categories={datastore,kubedb,appscode}
message MemcachedModificationRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MemcachedModificationRequestSpec spec = 2;

  optional MemcachedModificationRequestStatus status = 3;
}

message MemcachedModificationRequestCondition {
  // request approval state, currently Approved or Denied.
  optional string type = 1;

  // brief reason for the request state
  // +optional
  optional string reason = 2;

  // human readable message with details about the request state
  // +optional
  optional string message = 3;

  // timestamp for the last update to this condition
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;
}

// MemcachedModificationRequestList is a list of MemcachedModificationRequests
message MemcachedModificationRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MemcachedModificationRequest CRD objects
  repeated MemcachedModificationRequest items = 2;
}

// MemcachedModificationRequestSpec is the spec for elasticsearch version
message MemcachedModificationRequestSpec {
}

// MemcachedModificationRequestStatus is the status for elasticsearch version
message MemcachedModificationRequestStatus {
  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated MemcachedModificationRequestCondition conditions = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=mongodbmodificationrequests,singular=mongodbmodificationrequest,shortName=mgmodreq,categories={datastore,kubedb,appscode}
message MongoDBModificationRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MongoDBModificationRequestSpec spec = 2;

  optional MongoDBModificationRequestStatus status = 3;
}

message MongoDBModificationRequestCondition {
  // request approval state, currently Approved or Denied.
  optional string type = 1;

  // brief reason for the request state
  // +optional
  optional string reason = 2;

  // human readable message with details about the request state
  // +optional
  optional string message = 3;

  // timestamp for the last update to this condition
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;
}

// MongoDBModificationRequestList is a list of MongoDBModificationRequests
message MongoDBModificationRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MongoDBModificationRequest CRD objects
  repeated MongoDBModificationRequest items = 2;
}

// MongoDBModificationRequestSpec is the spec for elasticsearch version
message MongoDBModificationRequestSpec {
}

// MongoDBModificationRequestStatus is the status for elasticsearch version
message MongoDBModificationRequestStatus {
  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated MongoDBModificationRequestCondition conditions = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=mysqlmodificationrequests,singular=mysqlmodificationrequest,shortName=mymodreq,categories={datastore,kubedb,appscode}
message MySQLModificationRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MySQLModificationRequestSpec spec = 2;

  optional MySQLModificationRequestStatus status = 3;
}

message MySQLModificationRequestCondition {
  // request approval state, currently Approved or Denied.
  optional string type = 1;

  // brief reason for the request state
  // +optional
  optional string reason = 2;

  // human readable message with details about the request state
  // +optional
  optional string message = 3;

  // timestamp for the last update to this condition
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;
}

// MySQLModificationRequestList is a list of MySQLModificationRequests
message MySQLModificationRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MySQLModificationRequest CRD objects
  repeated MySQLModificationRequest items = 2;
}

// MySQLModificationRequestSpec is the spec for elasticsearch version
message MySQLModificationRequestSpec {
}

// MySQLModificationRequestStatus is the status for elasticsearch version
message MySQLModificationRequestStatus {
  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated MySQLModificationRequestCondition conditions = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=perconaxtradbmodificationrequests,singular=perconaxtradbmodificationrequest,shortName=pxcmodreq,categories={datastore,kubedb,appscode}
message PerconaXtraDBModificationRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PerconaXtraDBModificationRequestSpec spec = 2;

  optional PerconaXtraDBModificationRequestStatus status = 3;
}

message PerconaXtraDBModificationRequestCondition {
  // request approval state, currently Approved or Denied.
  optional string type = 1;

  // brief reason for the request state
  // +optional
  optional string reason = 2;

  // human readable message with details about the request state
  // +optional
  optional string message = 3;

  // timestamp for the last update to this condition
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;
}

// PerconaXtraDBModificationRequestList is a list of PerconaXtraDBModificationRequests
message PerconaXtraDBModificationRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of PerconaXtraDBModificationRequest CRD objects
  repeated PerconaXtraDBModificationRequest items = 2;
}

// PerconaXtraDBModificationRequestSpec is the spec for elasticsearch version
message PerconaXtraDBModificationRequestSpec {
}

// PerconaXtraDBModificationRequestStatus is the status for elasticsearch version
message PerconaXtraDBModificationRequestStatus {
  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated PerconaXtraDBModificationRequestCondition conditions = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=pgbouncermodificationrequests,singular=pgbouncermodificationrequest,shortName=pbmodreq,categories={datastore,kubedb,appscode}
message PgBouncerModificationRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PgBouncerModificationRequestSpec spec = 2;

  optional PgBouncerModificationRequestStatus status = 3;
}

message PgBouncerModificationRequestCondition {
  // request approval state, currently Approved or Denied.
  optional string type = 1;

  // brief reason for the request state
  // +optional
  optional string reason = 2;

  // human readable message with details about the request state
  // +optional
  optional string message = 3;

  // timestamp for the last update to this condition
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;
}

// PgBouncerModificationRequestList is a list of PgBouncerModificationRequests
message PgBouncerModificationRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of PgBouncerModificationRequest CRD objects
  repeated PgBouncerModificationRequest items = 2;
}

// PgBouncerModificationRequestSpec is the spec for elasticsearch version
message PgBouncerModificationRequestSpec {
}

// PgBouncerModificationRequestStatus is the status for elasticsearch version
message PgBouncerModificationRequestStatus {
  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated PgBouncerModificationRequestCondition conditions = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=postgresmodificationrequests,singular=postgresmodificationrequest,shortName=pgmodreq,categories={datastore,kubedb,appscode}
message PostgresModificationRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PostgresModificationRequestSpec spec = 2;

  optional PostgresModificationRequestStatus status = 3;
}

message PostgresModificationRequestCondition {
  // request approval state, currently Approved or Denied.
  optional string type = 1;

  // brief reason for the request state
  // +optional
  optional string reason = 2;

  // human readable message with details about the request state
  // +optional
  optional string message = 3;

  // timestamp for the last update to this condition
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;
}

// PostgresModificationRequestList is a list of PostgresModificationRequests
message PostgresModificationRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of PostgresModificationRequest CRD objects
  repeated PostgresModificationRequest items = 2;
}

// PostgresModificationRequestSpec is the spec for elasticsearch version
message PostgresModificationRequestSpec {
}

// PostgresModificationRequestStatus is the status for elasticsearch version
message PostgresModificationRequestStatus {
  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated PostgresModificationRequestCondition conditions = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=proxysqlmodificationrequests,singular=proxysqlmodificationrequest,categories={datastore,kubedb,appscode}
message ProxySQLModificationRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ProxySQLModificationRequestSpec spec = 2;

  optional ProxySQLModificationRequestStatus status = 3;
}

message ProxySQLModificationRequestCondition {
  // request approval state, currently Approved or Denied.
  optional string type = 1;

  // brief reason for the request state
  // +optional
  optional string reason = 2;

  // human readable message with details about the request state
  // +optional
  optional string message = 3;

  // timestamp for the last update to this condition
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;
}

// ProxySQLModificationRequestList is a list of ProxySQLModificationRequests
message ProxySQLModificationRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ProxySQLModificationRequest CRD objects
  repeated ProxySQLModificationRequest items = 2;
}

// ProxySQLModificationRequestSpec is the spec for elasticsearch version
message ProxySQLModificationRequestSpec {
}

// ProxySQLModificationRequestStatus is the status for elasticsearch version
message ProxySQLModificationRequestStatus {
  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated ProxySQLModificationRequestCondition conditions = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=redismodificationrequests,singular=redismodificationrequest,shortName=rdmodreq,categories={datastore,kubedb,appscode}
message RedisModificationRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RedisModificationRequestSpec spec = 2;

  optional RedisModificationRequestStatus status = 3;
}

message RedisModificationRequestCondition {
  // request approval state, currently Approved or Denied.
  optional string type = 1;

  // brief reason for the request state
  // +optional
  optional string reason = 2;

  // human readable message with details about the request state
  // +optional
  optional string message = 3;

  // timestamp for the last update to this condition
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;
}

// RedisModificationRequestList is a list of RedisModificationRequests
message RedisModificationRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of RedisModificationRequest CRD objects
  repeated RedisModificationRequest items = 2;
}

// RedisModificationRequestSpec is the spec for elasticsearch version
message RedisModificationRequestSpec {
}

// RedisModificationRequestStatus is the status for elasticsearch version
message RedisModificationRequestStatus {
  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated RedisModificationRequestCondition conditions = 1;
}

